--실습문제--

--도서관리 프로그램을 만들기 위한 테이블을 만들기

--이때, 제약조건에 이름을 부여할 것

-- 각 컬럼에 주석달기

DROP TABLE TB_RENT;
DROP TABLE TB_MEMBER;
DROP TABLE TB_BOOK;
DROP TABLE TB_PUBLISHER;
--------------------------------------------------------------------------------
--1. 출판사들에 대한 데이터를 담기 위한 출판사 테이블(TB_PUBLISHER)

--컬럼: PUB_NO(출판사번호) --기본키(PUBLISHER_PK)

-- PUB_NAME(출판사명) --NOT NULL(PUBLICHSER_NN)

-- PHONE(출판사전화번호) --제약조건 없음

--3개 정도의 샘플 데이터 추가하기

CREATE TABLE TB_PUBLISHER(
    PUB_NO NUMBER CONSTRAINT PUBLISHER_PK PRIMARY KEY,
    PUB_NAME VARCHAR2(50) CONSTRAINT PUBLICHSER_NN NOT NULL,
    PHONE VARCHAR2(50)
);

SELECT *
FROM TB_PUBLISHER;

COMMENT ON COLUMN TB_PUBLISHER.PUB_NO IS '출판사번호';
COMMENT ON COLUMN TB_PUBLISHER.PUB_NAME IS '출판사명';
COMMENT ON COLUMN TB_PUBLISHER.PHONE IS '출판사전화번호';

INSERT INTO TB_PUBLISHER VALUES(01, '창비', '031-955-3333');
INSERT INTO TB_PUBLISHER VALUES(02, '나무옆의자', '02-790-6630');
INSERT INTO TB_PUBLISHER VALUES(03, '스노우폭스북스', '0507-1405-9965');
INSERT INTO TB_PUBLISHER VALUES(04, '사이언스북스', '02-515-2000');
INSERT INTO TB_PUBLISHER VALUES(05, '북스톤', '02-6463-7000');



--2. 도서들에 대한 데이터를 담기 위한 도서 테이블(TB_BOOK)

--컬럼: BK_NO(도서번호) --기본키(BOOK_PK)

-- BK_TITLE(도서명) --NOT NULL(BOOK_NN_TITLE)

-- BK_AUTHOR(저자명) --NOT NULL(BOOK_NN_AUTHOR)

-- BK_PRICE(가격)

-- BK_STOCK(재고) --기본값 1로 지정

-- BK_PUB_NO(출판사번호) --외래키(BOOK_FK)(TB_PUBLISHER 테이블을 참조하도록)

-- 이때 참조하고 있는 부모데이터 삭제 시 자식데이터도 삭제되도록 설정

--5개 정도의 샘플 데이터 추가하기

CREATE TABLE TB_BOOK(
    BK_NO NUMBER CONSTRAINT BOOK_PK PRIMARY KEY,
    BK_TITLE VARCHAR2(50) CONSTRAINT BOOK_NN_TITLE NOT NULL,
    BK_AUTHOR VARCHAR2(50) CONSTRAINT BOOK_NN_AUTHOR NOT NULL,
    BK_PRICE NUMBER,
    BK_STOCK NUMBER DEFAULT 1,
    BK_PUB_NO NUMBER CONSTRAINT BOOK_FK REFERENCES TB_PUBLISHER(PUB_NO) ON DELETE CASCADE
);

SELECT *
FROM TB_BOOK;

COMMENT ON COLUMN TB_BOOK.BK_NO IS '도서번호';
COMMENT ON COLUMN TB_BOOK.BK_TITLE IS '도서명';
COMMENT ON COLUMN TB_BOOK.BK_AUTHOR IS '저자명';
COMMENT ON COLUMN TB_BOOK.BK_PRICE IS '가격';
COMMENT ON COLUMN TB_BOOK.BK_STOCK IS '재고';
COMMENT ON COLUMN TB_BOOK.BK_PUB_NO IS '출판사번호';

INSERT INTO TB_BOOK VALUES(101, '크리스마스 타일', '김금희', 13500, 32, 01);
INSERT INTO TB_BOOK VALUES(102, '아몬드', '손원평', 10800, 29, 01);
INSERT INTO TB_BOOK VALUES(103, '불편한 편의점', '김호연', 12600, 16, 02);
INSERT INTO TB_BOOK VALUES(104, '망원동 브라더스', '김호연', 11700, 26, 02);
INSERT INTO TB_BOOK VALUES(105, '갈매기의 꿈', '리처드 바크', 11500, 14, 02);
INSERT INTO TB_BOOK VALUES(106, '돈의 속성', '김승호', 16000, 90, 03);
INSERT INTO TB_BOOK VALUES(107, '빠르게 실패하기', '존 크럼볼츠', 14800, 29, 03);
INSERT INTO TB_BOOK VALUES(108, '종의 기원', '찰스 다윈', 19800, 50, 04);
INSERT INTO TB_BOOK VALUES(109, '코스모스', '칼 세이건', 17900, 34, 04);
INSERT INTO TB_BOOK VALUES(110, '유난한 도전', '정경화', 15300, 52, 05);



--3. 회원에 대한 데이터를 담기 위한 회원 테이블(TB_MEMBER)

--컬럼명: MEMBER_NO(회원번호) --기본키(MEMBER_PK)

-- MEMBER_ID(아이디) --중복금지(MEMBER_UQ)

--MEMBER_PWD(비밀번호) NOT NULL(MEMBER_NN_PWD)

--MEMBER_NAME(회원명) NOT NULL(MEMBER_NN_NAME)

--GENDER(성별) 'M' 또는 'F'로 입력되도록 제한(MEMBER_CK_GEN)

--ADDRESS(주소)

--PHONE(연락처)

--STATUS(탈퇴여부) --기본값으로 'N' 그리고 'Y' 혹은 'N'으로 입력되도록 제약조건(MEMBER_CK_STA)

--ENROLL_DATE(가입일) --기본값으로 SYSDATE, NOT NULL 조건(MEMBER_NN_EN)

--5개 정도의 샘플 데이터 추가하기

CREATE TABLE TB_MEMBER(
    MEMBER_NO VARCHAR2(20) CONSTRAINT MEMBER_PK PRIMARY KEY,
    MEMBER_ID VARCHAR2(50) CONSTRAINT MEMBER_UQ UNIQUE,
    MEMBER_PWD VARCHAR2(50) CONSTRAINT MEMBER_NN_PWD NOT NULL,
    MEMBER_NAME VARCHAR2(50) CONSTRAINT MEMBER_NN_NAME NOT NULL,
    GENDER CHAR(3) CONSTRAINT MEMBER_CK_GEN CHECK(GENDER IN ('M', 'F')),
    ADDRESS VARCHAR2(50),
    PHONE VARCHAR2(50),
    STATUS CHAR(3) DEFAULT 'N' CONSTRAINT MEMBER_CK_STA CHECK(STATUS IN ('Y', 'N')),
    ENROLL_DATE DATE DEFAULT SYSDATE CONSTRAINT MEMBER_NN_EN NOT NULL
);

SELECT *
FROM TB_MEMBER;

COMMENT ON COLUMN TB_MEMBER.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_ID IS '아이디';
COMMENT ON COLUMN TB_MEMBER.MEMBER_PWD IS '비밀번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_NAME IS '회원명';
COMMENT ON COLUMN TB_MEMBER.GENDER IS '성별';
COMMENT ON COLUMN TB_MEMBER.ADDRESS IS '주소';
COMMENT ON COLUMN TB_MEMBER.PHONE IS '연락처';
COMMENT ON COLUMN TB_MEMBER.STATUS IS '탈퇴여부';
COMMENT ON COLUMN TB_MEMBER.ENROLL_DATE IS '가입일';

INSERT INTO TB_MEMBER VALUES('A01', 'user01', 'pass01', '김수지', 'F', '경기도 화성시', '010-1987-0620', 'N', '05/09/10');
INSERT INTO TB_MEMBER VALUES('A02', 'user02', 'pass02', '박정아', 'F', '경상북도 김천시', '010-3991-6230', 'Y', '10/11/23'); 
INSERT INTO TB_MEMBER VALUES('A03', 'user03', 'pass03', '최가은', 'M', '광주광역시 서구', '010-2001-2028', 'N', DEFAULT);
INSERT INTO TB_MEMBER VALUES('A04', 'user04', 'pass04', '강소휘', 'M', '서울특별시 중구', '010-9179-0718', 'N', '15/09/09');
INSERT INTO TB_MEMBER VALUES('A05', 'user05', 'pass05', '김연경', 'F', '인천광역시 부평구', '010-8891-2602', 'Y', '09/05/01');



--4. 도서를 대여한 회원에 대한 데이터를 담기 위한 대여목록 테이블(TB_RENT)

--컬럼:

--RENT_NO(대여번호) --기본키(RENT_PK)

--RENT_MEM_NO(대여회원번호) --외래키(RENT_FK_MEM) TB_MEMBER와 참조하도록

--이때 부모데이터 삭제 시 NULL값이 되도록 옵션 설정

--RENT_BOOK_NO(대여도서번호) --외래키(RENT_FK_BOOK) TB_BOOK와 참조하도록

--이때 부모데이터 삭제 시 NULL값이 되도록 옵션설정

--RENT_DATE(대여일) --기본값 SYSDATE

--샘플데이터 3개정도 추가하기

CREATE TABLE TB_RENT(
    RENT_NO NUMBER CONSTRAINT RENT_PK PRIMARY KEY,
    RENT_MEM_NO VARCHAR2(20) CONSTRAINT RENT_FK_MEM REFERENCES TB_MEMBER(MEMBER_NO) ON DELETE SET NULL,
    RENT_BOOK_NO NUMBER CONSTRAINT RENT_FK_BOOK REFERENCES TB_BOOK(BK_NO) ON DELETE SET NULL,
    RENT_DATE DATE DEFAULT SYSDATE
);

SELECT *
FROM TB_RENT;

COMMENT ON COLUMN TB_RENT.RENT_NO IS '대여번호';
COMMENT ON COLUMN TB_RENT.RENT_MEM_NO IS '대여회원번호';
COMMENT ON COLUMN TB_RENT.RENT_BOOK_NO IS '대여도서번호';
COMMENT ON COLUMN TB_RENT.RENT_DATE IS '대여일';

INSERT INTO TB_RENT VALUES(901, 'A01', 107, '22/12/02');
INSERT INTO TB_RENT VALUES(902, 'A02', 104, '22/12/04');
INSERT INTO TB_RENT VALUES(903, 'A03', 102, '22/12/01');
INSERT INTO TB_RENT VALUES(904, 'A03', 105, DEFAULT);
INSERT INTO TB_RENT VALUES(905, 'A04', 110, '22/12/03');
INSERT INTO TB_RENT VALUES(906, 'A05', 101, '22/12/02');
INSERT INTO TB_RENT VALUES(907, 'A05', 106, DEFAULT);



--2번 도서를 대여한 회원의 이름, 아이디, 대여일, 반납예정일(대여일+7)을 조회하시오.
SELECT MEMBER_NAME AS "이름", MEMBER_ID AS "아이디", RENT_DATE AS "대여일", RENT_DATE + 7 AS "반납예정일"
FROM TB_MEMBER
JOIN TB_RENT ON (MEMBER_NO = RENT_MEM_NO)
JOIN TB_BOOK ON (RENT_BOOK_NO = BK_NO)
WHERE BK_NO = 102;

SELECT MEMBER_NAME AS "이름", MEMBER_ID AS "아이디", RENT_DATE AS "대여일", RENT_DATE + 7 AS "반납예정일"
FROM TB_MEMBER
JOIN TB_RENT ON (MEMBER_NO = RENT_MEM_NO)
WHERE RENT_BOOK_NO = 102;
